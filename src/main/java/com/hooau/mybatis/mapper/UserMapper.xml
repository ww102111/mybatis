<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--mapper代理开发
    namespace: 指定为mapper接口的权限命名
    statement: id为mapper接口的方法名
               parameterType为方法参数类型
               resultType为方法的返回值类型
-->
<mapper namespace="com.hooau.mybatis.mapper.UserMapper">

    <!--type: 最终映射的实体类型-->
    <resultMap id="userListResultMap" type="user">
        <!--主键映射-->
        <id column="id_" property="id"/>
        <!--普通列映射-->
        <result column="username_" property="username"/>
        <result column="address_" property="address"/>
        <result column="sex_" property="sex"/>
    </resultMap>

    <!-- sql片断，相当于封装查询条件 -->
    <sql id="user_query">
        <if test="userExtend != null">
            <if test="userExtend.username != null and userExtend.username != ''">
                AND username LIKE '%${userExtend.username}%'
            </if>
            <if test="userExtend.sex != null and userExtend.sex != ''">
                AND sex = #{userExtend.sex}
            </if>

            <!--使用foreach
                SELECT * FROM USER WHERE username LIKE '%柳%' AND id IN (1, 10, 28)
            -->
            <!--<foreach collection="ids" open=" AND id IN (" close=")" item="id" separator=",">-->
                <!--#{id}-->
            <!--</foreach>-->

            <!--
                SELECT * FROM USER WHERE username LIKE '%柳%' AND (id=1 OR id=10 OR id=28)
            -->
            <foreach collection="ids" open=" AND (" close=")" item="id" separator="OR">
                id=#{id}
            </foreach>
        </if>
    </sql>


    <select id="findUserById" parameterType="int" resultType="user">
      SELECT * FROM USER WHERE id=#{id}
    </select>

    <select id="findUsersByName" parameterType="String" resultType="user">
        SELECT * FROM USER WHERE USERNAME LIKE '%${value}%'
    </select>

    <select id="findUserList" parameterType="userWrap" resultType="user">
        SELECT * FROM USER WHERE USERNAME LIKE '%${userExtend.username}%'
    </select>

    <insert id="insertUser" parameterType="user">
        <selectKey keyProperty="id" order="AFTER" resultType="int">
          <!--查询刚插入记录的id-->
          SELECT LAST_INSERT_ID()
        </selectKey>

        <!--MySQL uuid
        <selectKey keyProperty="id" order="BEFORE" resultType="String">
            SELECT UUID()
        </selectKey>-->

        INSERT INTO USER(username, birthday, sex, address) VALUES(#{username}, #{birthday}, #{sex}, #{address})
    </insert>

    <delete id="deleteById" parameterType="int">
        DELETE FROM USER WHERE id = #{id}
    </delete>

    <update id="updateUser" parameterType="user">
        UPDATE USER SET username=#{username}, birthday=#{birthday}, sex=#{sex}, address=#{address} WHERE id=#{id}
    </update>

    <select id="findUserCount" parameterType="userWrap" resultType="int">
        SELECT COUNT(id) FROM USER WHERE USERNAME LIKE '%${userExtend.username}%'
    </select>
    
    <select id="findUserResultMap" parameterType="userWrap" resultMap="userListResultMap">
        SELECT id id_, username username_, address address_ FROM USER
        <!--WHERE username LIKE '%${userExtend.username}%'-->
        <where>
            <include refid="user_query"/>
        </where>
    </select>
    
    <select id="findUserSqlPart" parameterType="userWrap" resultType="user">
        SELECT * FROM user
        <where>
          <!-- 如果引用别的命名空间的sql片断，refid=namespace.sqlid -->
          <include refid="user_query"/>
        </where>
    </select>

    <select id="findUserByIds" parameterType="userWrap" resultType="user">
        SELECT * FROM user
        <where>
            <!--如果引用别的命名空间的sql片断，refid=namespace.sqlid-->
            <include refid="user_query"/>
        </where>
    </select>
</mapper>

